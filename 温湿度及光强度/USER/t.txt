		//2.4G发送端
		while(NRF24L01_Check())
		{
			printf("\r\nNRF ERROR！\r\n");
		}
		
		while(1)
		{
			PCout(13)=0;
			delay_ms(100);
			PCout(13)=1;	
			
			switch(id)
			{
				
case 0: 
				NRF24L01_TX_Mode((u8*)IP1);	
				delay_ms(5);
				while(1)
				{							
					if(NRF24L01_TxPacket(readbuff)== TX_OK)
					{
						break;
					}
				}
				NRF24L01_RX_Mode((u8*)IP1);
				delay_ms(5);
				while(1)
				{
					if(NRF24L01_RxPacket(rx_buff) == 0)
					{
						for(i = 0; i<sizeof(rx_buff); i++)
						{
							USART_SendData(USART1, (char)rx_buff[i]);
							while(USART_GetFlagStatus(USART1,USART_FLAG_TC) != SET);
						}
						break;
					}
				}
break;
				case 1: NRF24L01_TX_Mode((u8*)IP2);
								if(NRF24L01_TxPacket(readbuff2)== TX_OK)
								{
									id = 0;
								}
								
								break;
				case 2: NRF24L01_TX_Mode((u8*)IP1);break;
				case 3: NRF24L01_TX_Mode((u8*)IP1);break;
				case 4: NRF24L01_TX_Mode((u8*)IP1);break;
				case 5: NRF24L01_TX_Mode((u8*)IP1);break;
				default:;
			}
			delay_ms(100);
		}	
		
		
		
		
const u8 IP1[TX_ADR_WIDTH]={0x34,0x43,0x10,0x10,0x01};	//dht11+bh1750的小板地址
const u8 IP2[RX_ADR_WIDTH]={0x43,0x10,0x01,0x01,0x02};	//sg90舵机与rfid的小板地址
const u8 IP3[TX_ADR_WIDTH]={0x34,0x43,0x10,0x10,0x03};	//步进电机
const u8 IP4[RX_ADR_WIDTH]={0x43,0x10,0x01,0x01,0x04};	//待定